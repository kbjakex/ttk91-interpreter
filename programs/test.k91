; driver.k91
; output "port"
ptrCtr DC 1048576 ; control register address
ptrStat DC 1048577 ; status register address
ptrData DC 1048578 ; data register address
; timeout = time to execute 3 000 000 instructions
TimeOut DC 600000 ; timeout loop count
; Print (int parData): int retVal
; print input value via output port
; return Failure (1) or Success (0)
; invoked via SVC in privileged mode
retVal EQU -3
parData EQU -2

Print   PUSHR SP
        LOAD R1, parData(FP)
        STORE R1, @ptrData          ; set data to print
        LOAD R1, =0
        STORE R1, @ptrStat          ; init state register to 0
        LOAD R1, =1
        STORE R1, @ptrCtr           ; give command to print
        LOAD R2, TimeOut            ; init timeout
Wait    LOAD R1, @PtrStat           ; check state register
        JNZER R1, Done
        SUB R2, =1                  ; check for timeout
        JZER R2, Fail
        JUMP Wait                   ; loop until done or timeout
Done    LOAD R1, =0                 ; return Success
        JUMP Retrn
Fail    LOAD R1, =1
Retrn   STORE R1, retVal(FP)
        POPR SP
        IRET SP, =1                 ; same syntax as EXIT 

Print2  PUSHR SP
        LOAD R1, parData(FP)
        STORE R1, @ptrData          ; set data to print
        LOAD R1, =0
        STORE R1, @ptrStat          ; init state register to 0
        LOAD R1, =1
        STORE R1, @ptrCtr           ; give command to print
        LOAD R2, TimeOut            ; init timeout
Wait2   LOAD R1, @PtrStat           ; check state register
        JNZER R1, Done2
        SUB R2, =1                  ; check for timeout
        JZER R2, Fail2
        JUMP Wait                   ; loop until done or timeout
Done2   LOAD R1, =0                 ; return Success
        JUMP Retrn2
Fail2   LOAD R1, =1
Retrn2  STORE R1, retVal(FP)
        POPR SP
        IRET SP, =1                 ; same syntax as EXIT 