
; Generic test

; Asks the user for a number, prints 1 if prime and 0 if not. Repeats until zero is entered.

NumPrimes EQU 1000

IPParamX EQU -2
IPRetVal EQU -3

Main    IN R1, =KBD
        JZER R1, End

        PUSH SP, =0
        PUSH SP, R1
        CALL IsPrime
        POP SP, R3
        
        OUT R3, =CRT
        JUMP Main

End     SVC SP, =HALT


; IsPrime(x) -> 1 if prime(x), else 0

IsPrime PUSHR SP
        ; Test for div by 2 separately
        LOAD R1, =2         
        LOAD R2, IPParamX(FP) ; Parameter x

        LOAD R3, R2
        MOD R3, R1
        JZER R3, IPFail

        LOAD R1, =3         ; Loop variable 'i'

IPLoop  LOAD R3, R2
        MOD R3, R1
        JZER R3, IPFail     ; if x % i == 0, goto IPFail, because not prime

        ADD R1, =2          ; i += 2

        LOAD R3, R1
        MUL R3, R3          ; r3 = i*i
        COMP R3, R2
        JNGRE IPLoop        ; if i*i <= x, goto IPLoop

        LOAD R1, =1         ; Must be prime if you get here.
        STORE R1, IPRetVal(FP) ; Return 1

        POPR SP
        EXIT SP, =1

IPFail  LOAD R1, =0
        STORE R1, IPRetVal(FP)

        POPR SP
        EXIT SP, =1